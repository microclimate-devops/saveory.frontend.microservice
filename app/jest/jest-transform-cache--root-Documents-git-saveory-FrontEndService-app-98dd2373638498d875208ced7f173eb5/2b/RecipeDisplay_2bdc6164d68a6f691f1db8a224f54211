/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/root/Documents/git/saveory/FrontEndService/app/src/components/RecipeDisplay.js';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_propTypes = require('prop-types'); /* istanbul ignore next */var _propTypes2 = _interopRequireDefault(_propTypes);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

RecipeDisplay = function (_Component) {_inherits(RecipeDisplay, _Component);function RecipeDisplay() {_classCallCheck(this, RecipeDisplay);return _possibleConstructorReturn(this, (RecipeDisplay.__proto__ || Object.getPrototypeOf(RecipeDisplay)).apply(this, arguments));}_createClass(RecipeDisplay, [{ key: 'showIngredientElement', value: function showIngredientElement(




		ingr) {
			return (
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'li', /* istanbul ignore next */{ key: ingr.name, __source: { fileName: _jsxFileName, lineNumber: 11 }, __self: this }, ingr.quantity, /* istanbul ignore next */' ', ingr.unit, /* istanbul ignore next */' ', ingr.name));

		} }, { key: 'createIngredientList', value: function createIngredientList(

		ingredients) {
			var ingredList = [];
			if (Array.isArray(ingredients)) {
				ingredList = ingredients.map(this.showIngredientElement);
			}
			return ingredList;
		} }, { key: 'showInstructionPiece', value: function showInstructionPiece(

		instPiece, i) {
			return (
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ key: i, className: 'recipe-instruction-piece', __source: { fileName: _jsxFileName, lineNumber: 25 }, __self: this }, instPiece));

		} }, { key: 'showInstructions', value: function showInstructions(

		instructions) {/* istanbul ignore next */var _this2 = this;
			if (typeof instructions === "string") {
				//seperate instructions on <br/> tag
				var instructionList = instructions.split("<br/>");

				//Give each element in the array it's own section
				return instructionList.map(function (instPiece, i) {return (/* istanbul ignore next */_this2.showInstructionPiece(instPiece, i));});
			}
		} }, { key: 'showRecipeContents', value: function showRecipeContents(

		recipe) {
			//Only render if there is a recipe selected to show
			if (typeof recipe === "object" && Object.keys(recipe).length > 0) {
				return (
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'recipe-display-content', __source: { fileName: _jsxFileName, lineNumber: 43 }, __self: this },
						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'recipe-display-ingredients', __source: { fileName: _jsxFileName, lineNumber: 44 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'ul', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 44 }, __self: this }, this.createIngredientList(recipe.ingredients))),
						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'recipe-display-instructions', __source: { fileName: _jsxFileName, lineNumber: 45 }, __self: this }, this.showInstructions(recipe.instructions))));


			}
		} }, { key: 'render', value: function render()

		{
			var recipe = this.props.recipe;
			return (
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'recipe-display-container', __source: { fileName: _jsxFileName, lineNumber: 54 }, __self: this },
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'recipe-display-header', __source: { fileName: _jsxFileName, lineNumber: 55 }, __self: this },
						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ className: 'recipe-display-title', __source: { fileName: _jsxFileName, lineNumber: 56 }, __self: this }, recipe.name),
						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ className: 'recipe-display-description', __source: { fileName: _jsxFileName, lineNumber: 57 }, __self: this }, recipe.description)),

					this.showRecipeContents(recipe)));


		} }]);return RecipeDisplay;}(_react.Component); /* istanbul ignore next */RecipeDisplay.PropTypes = { recipe: /* istanbul ignore next */_propTypes2.default.object.isRequired }; /* istanbul ignore next */exports.default =



RecipeDisplay;