/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/root/Documents/git/saveory/FrontEndService/app/src/components/RecipeSearch.js';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_propTypes = require('prop-types'); /* istanbul ignore next */var _propTypes2 = _interopRequireDefault(_propTypes);
var /* istanbul ignore next */_CarbonButton = require('./carbon/CarbonButton.js'); /* istanbul ignore next */var _CarbonButton2 = _interopRequireDefault(_CarbonButton);
var /* istanbul ignore next */_CarbonFormInput = require('./carbon/CarbonFormInput.js'); /* istanbul ignore next */var _CarbonFormInput2 = _interopRequireDefault(_CarbonFormInput);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

RecipeSearch = function (_Component) {_inherits(RecipeSearch, _Component);
	function /* istanbul ignore next */RecipeSearch(props) {/* istanbul ignore next */_classCallCheck(this, RecipeSearch);var _this = _possibleConstructorReturn(this, (RecipeSearch.__proto__ || Object.getPrototypeOf(RecipeSearch)).call(this,
		props));
		/* istanbul ignore next */_this.state = { search: "" };
		/* istanbul ignore next */_this.handleChange = /* istanbul ignore next */_this.handleChange.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.onSearch = /* istanbul ignore next */_this.onSearch.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
	}_createClass(RecipeSearch, [{ key: 'handleChange', value: function handleChange(





		target) {
			this.setState({ search: target.value });
		} }, { key: 'onSearch', value: function onSearch(

		e) {
			this.props.handleSearch(this.state.search);
		} }, { key: 'render', value: function render()

		{
			//<input type="search" placeholder="Search for Recipes" onChange={this.handleChange} value={this.state.search}/>
			return (
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'recipe-search-container', __source: { fileName: _jsxFileName, lineNumber: 29 }, __self: this },
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CarbonFormInput2.default, /* istanbul ignore next */{ inputData: this.state.search, inputType: 'text', inputID: 'recipe-search', inputLabel: 'Search for Recipes', onChange: this.handleChange, className: 'recipe-search-input-container', __source: { fileName: _jsxFileName, lineNumber: 30 }, __self: this }),
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CarbonButton2.default, /* istanbul ignore next */{ onClick: this.onSearch, text: 'Search', addedClass: 'recipe-search-button-container', __source: { fileName: _jsxFileName, lineNumber: 31 }, __self: this })));


		} }]);return RecipeSearch;}(_react.Component); /* istanbul ignore next */RecipeSearch.PropTypes = { handleSearch: /* istanbul ignore next */_propTypes2.default.func.isRequired }; /* istanbul ignore next */exports.default =


RecipeSearch;